package com.example.meefission.bino;

import org.achartengine.ChartFactory;
import org.achartengine.GraphicalView;
import org.achartengine.chart.BarChart;
import org.achartengine.model.CategorySeries;
import org.achartengine.model.XYMultipleSeriesDataset;
import org.achartengine.model.XYSeries;
import org.achartengine.renderer.XYMultipleSeriesRenderer;
import org.achartengine.renderer.XYSeriesRenderer;

import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.app.ActionBarActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;

import java.util.ArrayList;

public class MainActivity extends ActionBarActivity {

    EditText n, p, x;
    TextView ans;
    Button solve;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        final ProcessBino value = new ProcessBino();


        n = (EditText) findViewById(R.id.edit1);
        p = (EditText) findViewById(R.id.edit2);
        x = (EditText) findViewById(R.id.edit3);
        solve = (Button) findViewById(R.id.button1);
        ans = (TextView) findViewById(R.id.bino_ans);

        /*int[] a = new int[n1];
        for (int i = 0; i <= n1; i++)
            a[i] = i + 1;
        value.findMaxY(n1,p1,n1*p1);
        double[] y = new double[n1];
        y = value.positionY(n1,p1);*/

        solve.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                int n1 = Integer.parseInt(String.valueOf(n.getText()));
                double p1 = Double.parseDouble(String.valueOf(p.getText()));
                int x1 = Integer.parseInt(String.valueOf(x.getText()));
                double temp = value.binomial(n1, p1, x1);
                String show = String.valueOf(temp);
                ans.setText(show);

            }
        });


        if (savedInstanceState == null) {
            getSupportFragmentManager().beginTransaction()
                    .add(R.id.graph_container, new PlaceholderFragment())
                    .commit();
        }

    }

    public static class PlaceholderFragment extends Fragment {

        public PlaceholderFragment() {
        }

        private View mView;
        private GraphicalView mGraphView;

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                 Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.activity_main, container, false);
            mView = rootView;
            initData();
            return rootView;
        }

        private void drawChart(XYMultipleSeriesDataset dataset,
                               XYMultipleSeriesRenderer renderer) {
            if (null == mGraphView) {
                mGraphView =
                        ChartFactory.getBarChartView(getActivity(), dataset, renderer, BarChart.Type.STACKED);

                RelativeLayout container =
                        (RelativeLayout) mView.findViewById(R.id.graph_container);

                container.addView(mGraphView);
            } else {
                mGraphView.repaint();
            }
        }

        private void initData() {
            final ProcessBino value = new ProcessBino();

            CategorySeries series = new CategorySeries("Demo Bar Graph 1");
            for (int i = 0; i < y.length; i++) {
                series.add("Bar " + (i + 1), y[i]);
            }

            XYMultipleSeriesDataset dataset = new XYMultipleSeriesDataset();
            dataset.addSeries(series.toXYSeries());

            // This is how the "Graph" itself will look like
            XYMultipleSeriesRenderer multipleSeriesRenderer = new XYMultipleSeriesRenderer();

            multipleSeriesRenderer.setXTitle("X VALUES");
            multipleSeriesRenderer.setYTitle("BINOMAIL VALUES");
            multipleSeriesRenderer.setZoomButtonsVisible(true);
            multipleSeriesRenderer.setXLabels(0);
            multipleSeriesRenderer.setBackgroundColor(Color.rgb(242, 252, 255));
            multipleSeriesRenderer.setApplyBackgroundColor(true);
            multipleSeriesRenderer.setMarginsColor(Color.rgb(242, 252, 255));
            multipleSeriesRenderer.setLabelsColor(Color.BLACK);
            multipleSeriesRenderer.setAxesColor(Color.BLACK);
            multipleSeriesRenderer.setYLabelsColor(0, Color.BLACK);
            multipleSeriesRenderer.setXLabelsColor(Color.BLACK);
            multipleSeriesRenderer.setBarSpacing(1);

            XYSeriesRenderer renderer = new XYSeriesRenderer();
            renderer.setDisplayChartValues(true);
            renderer.setChartValuesSpacing((float) 30);
            multipleSeriesRenderer.addSeriesRenderer(renderer);
            renderer.setColor(Color.rgb(0, 101, 200));


            drawChart(dataset, multipleSeriesRenderer);
        }
    }
}
